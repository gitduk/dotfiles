#!/usr/bin/env zsh

# set zsh modern features
emulate -L zsh
setopt extended_glob null_glob

# default config
typeset -A CONFIG=(
  [length]="16"
  [use_special]="false"
  [special_chars]="!@#$%^&*?:.,()[]{}<>_+-=~"
)

# usage
usage() {
  echo "Usage: $0 [-n <length>] [-s]\n"

  cat <<'EOF'
  -n, --length <length>          Specify password length
  -s, --special                  Use special characters
EOF
  return 1
}

escape_for_tr() {
  local raw="$1"
  local safe="${raw//]/\\]}"
  safe="${safe//-/\\-}"
  echo "$safe"
}

main() {
  # parse args
  zparseopts -D -A opts \
    n: -length: \
    s -special
  [[ $? -eq 0 ]] || return 1

  # parse length
  [[ -n "${opts[-n]}" ]] && CONFIG[length]="${opts[-n]}"
  [[ -n "${opts[--length]}" ]] && CONFIG[length]="${opts[--length]}"

  # parse special opt
  [[ -n "${opts[(i)-s]}" || -n "${opts[(i)--special]}" ]] && CONFIG[use_special]="true"

  # check length
  if [[ ! "${CONFIG[length]}" =~ '^[0-9]+$' ]] || [[ "${CONFIG[length]}" -le 0 ]]; then
    echo "Error: Password length must be a positive integer.\n"
    usage
    return 1
  fi

  # build chars
  BASE_CHARS='A-Za-z0-9'
  if [[ ${CONFIG[use_special]} == "true" ]]; then
    ESCAPED_SPECIAL=$(escape_for_tr "${CONFIG[special_chars]}")
    CHARS="$BASE_CHARS$ESCAPED_SPECIAL"
  else
    CHARS="$BASE_CHARS"
  fi

  # general password
  PASSWORD=$(LC_ALL=C tr -dc "$CHARS" </dev/urandom | head -c "${CONFIG[length]}")
  echo "$PASSWORD"
}

main "$@"

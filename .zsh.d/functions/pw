#!/usr/bin/env bash

##############
### config ###
##############

# default config
declare -A CONFIG=(
  [length]="16"
  [use_special]="false"
  [special_chars]="!@#$%^&*?:.,()[]{}<>_+-=~"
  [pwfile]="$HOME/.pw.json"
)

usage() {
  echo "Usage: $0 [-n <length>] [-s]"
  cat <<'EOF'
  -n, --length <length>          Specify password length
  -s, --special                  Use special characters
EOF
  return 1
}

# log
logger() {
  local level="$1"
  shift
  printf "[%s] %s\n" "$level" "$*"
}

escape_for_tr() {
  local raw="$1"
  local safe="${raw//]/\\]}"
  safe="${safe//-/\\-}"
  echo "$safe"
}

############
### main ###
############

main () {
  while [[ $# -gt 0 ]]; do
    case $1 in
    -n | --length)
      if [[ -n "$2" && "$2" =~ ^[0-9]+$ ]]; then
        CONFIG[length]="$2"
        shift 2
      else
        echo "Error: -n|--length requires a numeric argument" >&2
        return 1
      fi
      ;;
    -s | --special)
      CONFIG[use_special]="true"
      shift
      ;;
    -f | --fzf)
      [[ ! -f "${CONFIG[pwfile]}" ]] &&
        logger error "${CONFIG[pwfile]} not exist." &&
        return 1
      jq -r 'to_entries[] | "\(.key)\t\(.value)"' ${CONFIG[pwfile]} | fzf --with-nth=1 --preview="" | cut -f2 | tr -d '\n' | wl-copy
      shift
      return 0
      ;;
    esac
  done
  
  # check length
  if [[ ! ${CONFIG[length]} =~ ^[0-9]+$ ]] || [[ "${CONFIG[length]}" -le 0 ]]; then
    logger error "Password length must be a positive integer."
    usage
    return 1
  fi
  
  # build chars
  BASE_CHARS='A-Za-z0-9'
  if [[ ${CONFIG[use_special]} == "true" ]]; then
    ESCAPED_SPECIAL=$(escape_for_tr "${CONFIG[special_chars]}")
    CHARS="$BASE_CHARS$ESCAPED_SPECIAL"
  else
    CHARS="$BASE_CHARS"
  fi
  
  # general password
  PASSWORD=$(LC_ALL=C tr -dc "$CHARS" </dev/urandom | head -c "${CONFIG[length]}")
  echo "$PASSWORD"
}

main "$@"

# HTTP(S) 和 SOCKS 代理混合端口
mixed-port: 7890

# redirect 透明代理端口，仅能代理 TCP 流量
redir-port: 7891

# tproxy 透明代理端口，可代理 TCP 与 UDP 流量
tproxy-port: 7892

# 允许局域网连接
allow-lan: true

# 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
bind-address: "*"

# 规则引擎
mode: rule

# Clash 内核输出日志的等级
# silent 静默，不输出
# error 仅输出发生错误至无法使用的日志
# warning 输出发生错误但不影响运行的日志，以及 error 级别内容
# info 输出一般运行的内容，以及 error 和 warning 级别的日志
# debug 尽可能的输出运行中所有的信息
log-level: info

# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
ipv6: true

# 控制 Clash 发出 TCP Keep Alive 包的间隔，减少移动设备耗电问题的临时措施。
keep-alive-interval: 30

# 控制是否让 Clash 去匹配进程
# always 开启，强制匹配所有进程
# strict 默认，由 Clash 判断是否开启
# off 不匹配进程，推荐在路由器上使用此模式
find-process-mode: off

# 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
external-controller: 0.0.0.0:9090

# API 的访问密钥
# secret: ""

# 可以将静态网页资源 (比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui
external-ui: ui/metacubexd-gh-pages

# 外部用户界面名字，合并为 external-ui/xd
# external-ui-name: xd

# 外部用户界面下载地址
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 缓存
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: true

# 更换延迟计算方式，去除握手等额外延迟
unified-delay: false

# TCP 并发
tcp-concurrent: true

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan
global-client-fingerprint: chrome

# 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true为 dat，默认值 false
geodata-mode: true 

# standard：标准加载器
# memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: memconservative

# 自动更新 GEO
geo-auto-update: false

# 更新间隔，单位为小时
geo-update-interval: 24

# 自定 GEO 下载地址
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 自定义外部资源下载时使用的的 UA，默认为 clash.meta
global-ua: clash.meta

# hosts 域名支持通配，例如 *.clash.dev或 +.example.com，别名不支持通配
hosts:
  '*.clash.dev': 127.0.0.1
  'alpha.clash.dev': '::1'
  test.com: [1.1.1.1, 2.2.2.2]
  baidu.com: bing.com

# DNS 配置
dns:
  enable: true
  prefer-h3: true
  use-hosts: true
  use-system-hosts: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - '*'
    - '+.lan'
  # 默认 DNS, 用于解析 DNS 服务器 的域名, 必须为 IP, 可为加密 DNS
  default-nameserver:
    - 223.5.5.5
  # 代理节点域名解析服务器，仅用于解析代理节点的域名
  proxy-server-nameserver:
    - https://doh.pub/dns-query
  # 默认的域名解析服务器，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
    - system
  # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询
  nameserver-policy:
    'www.baidu.com': '114.114.114.114'
    '+.internal.crop.com': '10.0.0.1'
    'geosite:cn': https://doh.pub/dns-query
  # 后备域名解析服务器，一般情况下使用境外 DNS, 保证结果可信
  # 配置 fallback后默认启用 fallback-filter, geoip-code 为 cn
  fallback:
    - tls://8.8.8.8
    - tls://1.1.1.1
  # 后备域名解析服务器筛选，满足条件的将使用 fallback结果或只使用 fallback解析
  fallback-filter:
    geoip: true
    # 除了 geoip-code 配置的国家 IP, 其他的 IP 结果会被视为污染
    geoip-code: CN
    # geosite 列表的内容被视为已污染，匹配到 geosite 的域名，将只使用 fallback 解析，不去使用 nameserver
    geosite:
      - gfw
    # 这些网段的结果会被视为污染，nameserver解析出这些结果时将会采用 fallback的解析结果
    ipcidr:
      - 240.0.0.0/4
    # 这些域名被视为已污染，匹配到这些域名，会直接使用 fallback解析，不去使用 nameserver
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'

# 域名嗅探
sniffer:
  enable: false
  # 对 redir-host 类型识别的流量进行强制嗅探
  force-dns-mapping: true
  # 对所有未获取到域名的流量进行强制嗅探
  parse-pure-ip: true
  override-destination: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  # 需要强制嗅探的域名（默认情况下只对IP进行嗅探）
  force-domain:
    - +.v2ex.com
  # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备Mijia Cloud
  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  # tun 模式堆栈，如无使用问题，建议使用 mixed 栈，默认 gvisor
  # system 使用系统协议栈，可以提供更稳定/全面的 tun 体验，且占用相对其他堆栈更低
  # gvisor 通过在用户空间中实现网络协议栈，可以提供更高的安全性和隔离性，同时可以避免操作系统内核和用户空间之间的切换，从而在特定情况下具有更好的网络处理性能
  # mixed 混合堆栈，tcp 使用 system栈，udp 使用 gvisor栈，使用体验可能相对更好
  stack: system
  # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。
  auto-route: true
  # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  auto-detect-interface: true
  # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则为 udp://
  dns-hijack:
    - any:53
    - tcp://any:53
  device: utun0
  mtu: 9000
  strict-route: true
  gso: true
  gso-max-size: 65536
  udp-timeout: 300
  endpoint-independent-nat: false
  include-interface:
    - eth0
  exclude-interface:
    - eth1
  inet4-route-address:
    - 0.0.0.0/1
    - 128.0.0.0/1
  inet6-route-address:
    - "::/1"
    - "8000::/1"
  inet4-route-exclude-address:
    - 192.168.0.0/16
  inet6-route-exclude-address:
    - fc00::/7
  include-uid:
    - 0
  include-uid-range:
    - 1000:9999
  exclude-uid:
    - 1000
  exclude-uid-range:
    - 1000:9999
  include-android-user:
    - 0
    - 10
  include-package:
    - com.android.chrome
  exclude-package:
    - com.android.captiveportallogin
  table-index: 2022

p: &p
  type: http
  interval: 3600
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 300

proxy-providers:
  ALL:
    <<: *p
    url: "http://sv:3078/provider?re="
    path: ./proxies/all.yaml
  香港:
    <<: *p
    url: "http://sv:3078/provider?re=%E9%A6%99%E6%B8%AF"
    path: ./proxies/hk.yaml
  台湾:
    <<: *p
    url: "http://sv:3078/provider?re=%E5%8F%B0%E6%B9%BE"
    path: ./proxies/tw.yaml
  新加坡:
    <<: *p
    url: "http://sv:3078/provider?re=%E7%8B%AE%E5%9F%8E"
    path: ./proxies/sg.yaml
  日本:
    <<: *p
    url: "http://sv:3078/provider?re=%E6%97%A5%E6%9C%AC"
    path: ./proxies/jp.yaml
  美国:
    <<: *p
    url: "http://sv:3078/provider?re=%E7%BE%8E%E5%9B%BD"
    path: ./proxies/us.yaml
  韩国:
    <<: *p
    url: "http://sv:3078/provider?re=%E9%9F%A9%E5%9B%BD"
    path: ./proxies/kr.yaml
  印度:
    <<: *p
    url: "http://sv:3078/provider?re=%E5%8D%B0%E5%BA%A6"
    path: ./proxies/in.yaml
  土耳其:
    <<: *p
    url: "http://sv:3078/provider?re=%E5%9C%9F%E8%80%B3%E5%85%B6"
    path: ./proxies/tr.yaml

proxy-groups:
  - name: "🌻 节点选择"
    type: "select"  
    proxies:
      - "🌲 负载轮询"
      - "🍁 负载散列"
      - "🐏 手动切换"
      - "🇭🇰 香港"
      - "🇹🇼 台湾" 
      - "🇸🇬 狮城"
      - "🇯🇵 日本"
      - "🇺🇲 美国"
      - "🇰🇷 韩国"
      - "🇮🇳 印度"
      - "🇹🇷 土耳其"
  
  - name: "🐏 手动切换"
    type: "select"
    use:
      - "ALL"
  
  - name: "🦍 广告拦截"
    type: "select"
    proxies:
      - "REJECT"
      - "🐼 全球直连"
  
  - name: "🐻 Chat"
    type: "select"
    proxies:
      - "🇯🇵 日本"
      - "🇮🇳 印度"
      - "🇹🇷 土耳其"
      - "🇰🇷 韩国"
      - "🇺🇲 美国"
      - "🐏 手动切换"
  
  - name: "🐼 全球直连"
    type: "select" 
    proxies:
      - "DIRECT"
      - "🌻 节点选择"
  
  - name: "🐟 漏网之鱼"
    type: "select"
    proxies:
      - "🌻 节点选择"
      - "DIRECT"
  
  - name: "🌲 负载轮询"
    type: "load-balance"
    strategy: "round-robin"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    use:
      - "香港"
      - "台湾"
      - "日本"
  
  - name: "🍁 负载散列" 
    type: "load-balance"
    strategy: "consistent-hashing"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    use:
      - "香港"
      - "台湾"
      - "日本"
  
  - name: "🇭🇰 香港"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "香港"
  
  - name: "🇹🇼 台湾"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180 
    tolerance: 100
    use:
      - "台湾"
  
  - name: "🇸🇬 狮城"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "新加坡"
  
  - name: "🇯🇵 日本"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "日本"
  
  - name: "🇺🇲 美国"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "美国"
  
  - name: "🇰🇷 韩国"
    type: "url-test" 
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "韩国"
      
  - name: "🇮🇳 印度"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "印度"
  
  - name: "🇹🇷 土耳其"
    type: "url-test"
    url: "http://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 100
    use:
      - "土耳其"

hdy: &hdy
  type: http
  behavior: domain
  format: yaml
  proxy: DIRECT
  interval: 86400

fct: &fct
  type: file
  behavior: classical
  format: text
  interval: 86400

rule-providers:
  reject:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml

  icloud:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml

  apple:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml

  google:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google.yaml

  proxy:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/proxy.yaml

  direct:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml

  private:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml

  gfw:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml

  tld-not-cn:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml

  telegramcidr:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml

  cncidr:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml

  lancidr:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml

  applications:
    <<: *hdy
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml

  chat:
    <<: *fct
    path: ./ruleset/chat.txt

  force-direct:
    <<: *fct
    path: ./ruleset/force-direct.txt

  force-proxy:
    <<: *fct
    path: ./ruleset/force-proxy.txt

rules:
  - RULE-SET,chat,🐻 Chat
  - RULE-SET,force-proxy,🐟 漏网之鱼
  - RULE-SET,force-direct,🐼 全球直连
  - RULE-SET,applications,🐼 全球直连
  - RULE-SET,private,🐼 全球直连
  - RULE-SET,reject,🦍 广告拦截
  - RULE-SET,icloud,🐼 全球直连
  - RULE-SET,apple,🐼 全球直连
  - RULE-SET,google,🐟 漏网之鱼
  - RULE-SET,proxy,🐟 漏网之鱼
  - RULE-SET,direct,🐼 全球直连
  - RULE-SET,lancidr,🐼 全球直连
  - RULE-SET,cncidr,🐼 全球直连
  - RULE-SET,telegramcidr,🐟 漏网之鱼
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🐟 漏网之鱼


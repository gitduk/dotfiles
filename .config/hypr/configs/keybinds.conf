####################
### KEYBINDINGSS ###
####################
# `xev` to show key name
# `showkey -a` to show keys

# bind mod
$Mod = ALT
$Mod_C = ALT CTRL
$Mod_S = ALT SHIFT
$Mod_CS = ALT CTRL SHIFT

# example binds, see https://wiki.hyprland.org/Configuring/Binds/
bind = $Mod, Q, killactive
bind = $Mod, F, fullscreen
bind = $Mod_S, Q, exec, kill $(hyprctl activewindow | grep -o 'pid: [0-9]*' | cut -d' ' -f2)
bind = $Mod_S, F, togglefloating

# terminal
$TERM = "alacritty"
bind = $Mod, C, exec, $TERM --title terminal -e tmux -2 new -ADs $USER
bind = $Mod, MINUS, exec, $TERM
bind = $Mod, BACKSLASH, exec, $TERM

# powermenu
bind = $Mod, BACKSPACE, exec, hyprlock -q
bind = $Mod_S, BACKSPACE, exec, systemctl suspend
bind = $Mod_C, BACKSPACE, exec, hyprctl dispatch exit 0
bind = $Mod_C SHIFT, BACKSPACE, exec, shutdown now

# launcher
bind = $Mod, A, exec, $scripts/launcher.sh

# clipboard
bind = $Mod, SEMICOLON, exec, foot -T clipboard sh -c "$scripts/clipboard.sh"

# password
bind = $Mod_S, P, exec, foot -T clipboard sh -c "cat ~/.pw | fzf | cut -d ':' -f 2- | tr -d '\n' | wl-copy"

# nootbook
bind = $Mod, N, exec, foot -T nb sh -c "nvim ~/.nb.md"

# refresh
bind = $Mod_S, R, exec, killall -SIGUSR2 waybar
bind = $Mod_S, R, exec, hyprctl reload

# Waybar / Bar
bind = $Mod, B, exec, killall -SIGUSR1 waybar # Toggle hide/show waybar

# Master Layout
bind = $Mod, I, layoutmsg, addmaster
bind = $Mod_S, I, layoutmsg, removemaster
bind = $Mod, Return, layoutmsg, swapwithmaster

# Special Keys / Hot Keys
# bind = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# bind = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.4 @DEFAULT_AUDIO_SINK@ 5%+
# bind = ,XF86AudioLowerVolume, exec, wpctl set-volume -l 1.4 @DEFAULT_AUDIO_SINK@ 5%-
bindl = ,xf86AudioMicMute, exec, $waybar/scripts/volume.sh --toggle-mic
bindel = ,xf86AudioAaiseVolume, exec, $waybar/scripts/volume.sh --inc
bindel = ,xf86AudioLowerVolume, exec, $waybar/scripts/volume.sh --dec
bindl = ,xf86AudioMute, exec, $waybar/scripts/volume.sh --toggle
bindl = ,xf86Sleep, exec, systemctl suspend
bindl = ,xf86Rfkill, exec, rfkill toggle wifi

# Move focus
bind = $Mod, J, movefocus, d
bind = $Mod, K, movefocus, u
bind = $Mod, H, movefocus, l
bind = $Mod, L, movefocus, r
bind = $Mod, P, focuscurrentorlast

# Move windows
bind = $Mod_S, J, movewindow, d
bind = $Mod_S, K, movewindow, u
bind = $Mod_S, H, movewindow, l
bind = $Mod_S, L, movewindow, r

# The following mappings use the key codes to better support various keyboard layouts
# 1 is code:10, 2 is code 11, etc
# Switch workspaces with Mod + [0-9]
bind = $Mod, code:10, workspace, 1
bind = $Mod, code:11, workspace, 2
bind = $Mod, code:12, workspace, 3
bind = $Mod, code:13, workspace, 4
bind = $Mod, code:14, workspace, 5
bind = $Mod, code:15, workspace, 6
bind = $Mod, code:16, workspace, 7
bind = $Mod, code:17, workspace, 8
bind = $Mod, code:18, workspace, 9
bind = $Mod, code:19, workspace, 10

# Move active window and follow to workspace Mod + SHIFT [0-9]
bind = $Mod_S, code:10, movetoworkspace, 1
bind = $Mod_S, code:11, movetoworkspace, 2
bind = $Mod_S, code:12, movetoworkspace, 3
bind = $Mod_S, code:13, movetoworkspace, 4
bind = $Mod_S, code:14, movetoworkspace, 5
bind = $Mod_S, code:15, movetoworkspace, 6
bind = $Mod_S, code:16, movetoworkspace, 7
bind = $Mod_S, code:17, movetoworkspace, 8
bind = $Mod_S, code:18, movetoworkspace, 9
bind = $Mod_S, code:19, movetoworkspace, 10
bind = $Mod_S, bracketleft, movetoworkspace, -1 # brackets [ or ]
bind = $Mod_S, bracketright, movetoworkspace, +1

# Move active window to a workspace silently Mod + CTRL [0-9]
bind = $Mod_C, code:10, movetoworkspacesilent, 1
bind = $Mod_C, code:11, movetoworkspacesilent, 2
bind = $Mod_C, code:12, movetoworkspacesilent, 3
bind = $Mod_C, code:13, movetoworkspacesilent, 4
bind = $Mod_C, code:14, movetoworkspacesilent, 5
bind = $Mod_C, code:15, movetoworkspacesilent, 6
bind = $Mod_C, code:16, movetoworkspacesilent, 7
bind = $Mod_C, code:17, movetoworkspacesilent, 8
bind = $Mod_C, code:18, movetoworkspacesilent, 9
bind = $Mod_C, code:19, movetoworkspacesilent, 10
bind = $Mod_C, bracketleft, movetoworkspacesilent, -1 # brackets [ or ]
bind = $Mod_C, bracketright, movetoworkspacesilent, +1

# Scroll through existing workspaces with Mod + scroll
bind = $Mod, mouse_down, workspace, e+1
bind = $Mod, mouse_up, workspace, e-1
bind = $Mod, period, workspace, e+1
bind = $Mod, comma, workspace, e-1

# Workspaces related
bind = $Mod_C, l, workspace, m+1
bind = $Mod_C, h, workspace, m-1

# Special workspace
bind = $Mod, TAB, togglespecialworkspace,
bind = $Mod_S, TAB, movetoworkspace, special

# Move/resize windows with Mod + LMB/RMB and dragging
bindm = $Mod, mouse:272, movewindow
bindm = $Mod, mouse:273, resizewindow

###############
### SUBMAPS ###
###############

bind = $Mod, M, submap, main

# main submap
submap = main
bind = ,R, submap, resize
bind = ,M, submap, music
bind = ,N, submap, nokey
bind = ,U, submap, utils
bind = ,W, submap, wallpaper
bind = ,T, submap, theme
bind = ,S, submap, screenshot
bind = $Mod, S, submap, settings
bind = ,Q, submap, reset
submap = reset

################
### settings ###
################
submap = settings

# sounds
bind = ,S, exec, find /usr/share/sounds/ $HOME/.local/share/sounds -type f | rofi -dmenu -i -p "Sounds" | xargs -I {} pw-play {}

# change layout
bind = ,M, exec, echo 'master\ndwindle' | grep -v $(hyprctl -j getoption general:layout | jq '.str' | sed 's/"//g') | xargs -I {} hyprctl keyword general:layout {}
bind = ,M, exec, sleep 0.1 && notify-send "Change Layout" $(hyprctl -j getoption general:layout | jq '.str' | sed 's/"//g')

bind = ,S, submap, reset
bind = ,B, submap, reset
bind = ,Q, submap, reset
submap = reset

##############
### resize ###
##############
submap = resize

binde = ,L, resizeactive, 20 0
binde = ,H, resizeactive, -20 0
binde = ,K, resizeactive, 0 -20
binde = ,J, resizeactive, 0 20
bind = ,M, exec, hyprctl dispatch splitratio 0.2

bind = ,M, submap, reset
bind = ,Q, submap, reset
submap = reset

#############
### music ###
#############
submap = music

bind = ,A, exec, foot -T mpd sh -c "$waybar/scripts/mpd.sh -s"
bind = ,U, exec, foot -T mpd sh -c "$waybar/scripts/mpd.sh -u"
bind = ,S, exec, mpc single
bind = ,R, exec, mpc random
bind = ,C, exec, mpc consume
bind = ,P, exec, mpc repeat
bind = ,J, exec, $scripts/volume.sh --dec
bind = ,K, exec, $scripts/volume.sh --inc
bind = ,SPACE, exec, mpc toggle
bind = ,L, exec, mpc next
bind = ,H, exec, mpc prev

bind = ,A, submap, reset
bind = ,Q, submap, reset
submap = reset

#################
### nokey map ###
#################
submap = nokey
bind = ,ESCAPE, submap, reset
submap = reset

#################
### utils map ###
#################
submap = utils
bind = ,S, exec, grim -g "$(slurp -b 1B1F28CC -w 0)" - | wl-copy
bind = ,catchall , submap, reset
submap = reset

##################
### screenshot ###
##################
submap = screenshot

bind = ,A, exec, $scripts/screenshot.sh --area
bind = ,N, exec, $scripts/screenshot.sh --now
bind = ,S, exec, $scripts/screenshot.sh --swappy
bind = ,W, exec, $scripts/screenshot.sh --active

bind = ,catchall , submap, reset
submap = reset

#################
### wallpaper ###
#################
submap = wallpaper

bind = ,A, exec, kitty --title img sh -c "$waybar/scripts/wallpaper.sh select $wallpapers"
bind = ,D, exec, pkill hyprpaper
bind = ,B, exec, $waybar/scripts/wallpaper.sh download bing
bind = ,R, exec, $waybar/scripts/wallpaper.sh random $wallpapers

bind = ,A, submap, reset
bind = ,D, submap, reset
bind = ,Q, submap, reset
submap = reset

#############
### theme ###
#############
submap = theme
bind = ,S, exec, foot -T popup sh -c "$waybar/scripts/waybar.sh -l $waybar/configs"
bind = ,C, exec, foot -T popup sh -c "$waybar/scripts/waybar.sh -s $waybar/style"
bind = ,T, exec, foot -T popup sh -c "$waybar/scripts/toggle-dark-light.sh"
bind = ,catchall , submap, reset
submap = reset


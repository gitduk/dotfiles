% install

# hyprland
sudo nala install -y cmake pkg-config build-essential meson ninja-build

cd /tmp
sudo nala install -y libsystemd-dev
git clone https://github.com/Kistler-Group/sdbus-cpp.git && cd sdbus-cpp/
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . && sudo cmake --build . --target install

cd /tmp
wget https://gitlab.freedesktop.org/emersion/libdisplay-info/-/releases/0.2.0/downloads/libdisplay-info-0.2.0.tar.xz
tar -xvf libdisplay-info-0.2.0.tar.xz && cd libdisplay-info-0.2.0/
meson setup build && sudo ninja -C build/ install

cd /tmp
sudo nala install -y libpugixml-dev
git clone https://github.com/hyprwm/hyprwayland-scanner.git && cd hyprwayland-scanner/
cmake -DCMAKE_INSTALL_PREFIX=/usr -B build \
  && cmake --build build -j `nproc` \
  && sudo cmake --install ./build

cd /tmp
sudo nala install -y libpixman-1-dev
git clone https://github.com/hyprwm/hyprutils.git && cd hyprutils/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf _NPROCESSORS_CONF` \
  && sudo cmake --install ./build

cd /tmp
git clone https://github.com/hyprwm/hyprlang.git && cd hyprlang/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target hyprlang -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install ./build

cd /tmp
sudo nala install -y libbrotli-dev libgif-dev libjpeg-dev libopenexr-dev libpng-dev libwebp-dev libspng-dev
git clone https://github.com/libjxl/libjxl.git --recursive --shallow-submodules && cd libjxl/
mkdir build && cd build/
cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DJPEGXL_ENABLE_SKCMS=ON -DJPEGXL_BUNDLE_SKCMS=ON .. && cmake --build . -- -j$(nproc) && sudo cmake --install .
sudo nala install -y libcairo2-dev libmagic-dev
git clone https://github.com/hyprwm/hyprgraphics && cd hyprgraphics/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build
cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF`
sudo cmake --install build

cd /tmp
sudo nala install -y libcairo2-dev libpango1.0-dev libgbm-dev libliftoff-dev libdisplay-info-dev libwayland-dev
git clone https://gitlab.freedesktop.org/wayland/wayland-protocols.git && cd wayland-protocols
meson setup build --prefix=/usr --buildtype=release && sudo ninja -C build/ install

cd /tmp
git clone https://github.com/hyprwm/aquamarine.git && cd aquamarine/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf _NPROCESSORS_CONF` \
  && sudo cmake --install build

cd /tmp
sudo nala install -y libzip-dev librsvg2-dev libtomlplusplus-dev libxcb-util-dev libxcb-image0-dev
git clone https://github.com/hyprwm/hyprcursor.git && cd hyprcursor/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install ./build

cd /tmp
sudo nala install -y dh-autoreconf xutils-dev xcb-proto
git clone --recursive https://gitlab.freedesktop.org/xorg/lib/libxcb-errors.git && cd libxcb-errors/
sudo ./autogen.sh --prefix=/usr/local && sudo make && sudo make install

cd /tmp
sudo nala install -y libmagic-dev
git clone https://github.com/hyprwm/hyprpaper.git && cd hyprpaper/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target hyprpaper -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install ./build

cd /tmp
sudo nala install -y libpam0g-dev libdrm-dev 
git clone https://github.com/hyprwm/hyprlock.git && cd hyprlock/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -S . -B ./build \
  && cmake --build ./build --config Release --target hyprlock -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install ./build

cd /tmp
git clone https://github.com/hyprwm/hypridle.git && cd hypridle/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -S . -B ./build \
  && cmake --build ./build --config Release --target hypridle -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install build \
  && systemctl --user enable --now hypridle.service

cd /tmp
sudo nala install -y libalsa-ocaml-dev
git clone https://github.com/codelif/hyprnotify.git && cd hyprnotify/
go build ./cmd/hyprnotify
mv ./hyprnotify ~/.local/bin/hyprnotify

cd /tmp
sudo nala install -y qt6-base-dev qt6-declarative-dev qt6-declarative-private-dev
sudo nala install -y qt6-wayland-dev qt6-wayland-private-dev qml6-module-qtwayland-compositor
sudo nala install -y qml6-module-qtcore qml6-module-qtqml-workerscript qml6-module-qtqml-models \
  qml6-module-qtquick qml6-module-qtquick-controls qml6-module-qtquick-layouts \
  qml6-module-qtquick-templates qml6-module-qtquick-window libqt6quick6
git clone https://github.com/hyprwm/hyprland-qtutils.git && cd hyprland-qtutils/
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build \
  && cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF` \
  && sudo cmake --install build

cd /tmp
sudo nala install -y libxcursor-dev libre2-dev libudis86-dev
git clone --recursive https://github.com/hyprwm/Hyprland && cd Hyprland/
make all && sudo make install

# google-chrome
cd /tmp
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb
cd -

# sing-box for android
wget https://googledownloads.cn/android/repository/android-ndk-r27-linux.zip && unzip android-ndk-r27-linux.zip
git clone --depth 1 -b 'outbound-providers' https://github.com/PuerNya/sing-box.git && cd sing-box/
export CC="/tmp/android-ndk-r27/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
GOOS=android GOARCH=arm64 CGO_ENABLED=1 go build -v -trimpath -ldflags "-s -w -buildid=" -tags with_quic,with_wireguard,with_acme,with_gvisor,with_clash_api ./cmd/sing-box \
  && sudo setcap cap_net_admin=+ep ./sing-box

# fcitx5-rime - 白霜拼音
sudo nala install -y fcitx5 \
  fcitx5-chinese-addons \
  fcitx5-frontend-gtk4 fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 \
  fcitx5-frontend-qt5 fcitx5-rime
im-config -n fcitx5
mkdir -p ~/.local/share/fcitx5 && cd ~/.local/share/fcitx5
git clone --depth 1 https://github.com/gaboolic/rime-frost rime
cd rime && git pull

# zed
curl -f https://zed.dev/install.sh | sh

# zed preview
curl -f https://zed.dev/install.sh | ZED_CHANNEL=preview sh

# waybar
sudo nala install libspdlog-dev libgtkmm-3.0-dev libjsoncpp-dev libnl-genl-3-dev libupower-glib-dev \
  libpipewire-0.3-dev libplayerctl-dev libpulse-dev libxkbregistry-dev scdoc
git clone https://github.com/Alexays/Waybar && cd Waybar/
meson setup build && sudo ninja -C build install

# rofi - wayland support
sudo nala install librust-xkbcommon-dev libgdk-pixbuf-2.0-dev libxcb-util-dev libxcb-ewmh-dev libxcb-icccm4-dev libmpdclient-dev libnl-3-dev \
  libalsa-ocaml-dev libxcb-randr0-dev libxcb-cursor-dev libxcb-xinerama0-dev libxcb-keysyms1-dev libstartup-notification0-dev flex bison \
  pandoc doxygen cppcheck ohcount
git clone --depth=1 https://github.com/lbonn/rofi.git && cd rofi/
meson setup build && ninja -C build && sudo ninja -C build install

# chsrc
curl -L https://gitee.com/RubyMetric/chsrc/releases/download/pre/chsrc-x64-linux -o ~/.local/bin/chsrc
chmod +x ~/.local/bin/chsrc

# yazi
cargo install --locked --git https://github.com/sxyazi/yazi.git yazi-fm yazi-cli

# wallust
cargo install --locked wallust

# Spotube - Spotify music open source client
sudo nala install -y gir1.2-appindicator3-0.1
wget "https://github.com/KRTirtho/spotube/releases/download/v3.8.1/Spotube-linux-x86_64.deb"
sudo dpkg -i ./Spotube-linux-x86_64.deb

# clipse
git clone https://github.com/bugaevc/wl-clipboard.git && cd wl-clipboard/
meson build/ --prefix=/usr --buildtype=release && sudo ninja -C build/ install
git clone https://github.com/savedra1/clipse && cd clipse
go mod tidy && go build -o clipse && sudo mv ./clipse /usr/bin/

# flameshot - screenshot tool
sudo nala install -y g++ cmake build-essential qtbase5-dev qttools5-dev-tools qttools5-dev libqt5svg5-dev libkf5guiaddons-dev
sudo nala install -y libqt5dbus5 libqt5network5 libqt5core5a libqt5widgets5 libqt5gui5 libqt5svg5
git clone https://github.com/flameshot-org/flameshot.git && cd flameshot/
cmake -S . -B build \
  -DUSE_WAYLAND_CLIPBOARD=true \
  -DUSE_WAYLAND_GRIM=ON \
  && cmake --build build \
  && sudo cmake --install build

# greetd - login manager daemon
git clone https://git.sr.ht/~kennylevinsen/greetd && cd greetd/
cargo build --release
sudo cp target/release/{greetd,agreety} /usr/local/bin/
sudo cp greetd.service /etc/systemd/system/greetd.service
mkdir /etc/greetd && cp ~/.etc/greetd/config.toml /etc/greetd/config.toml
sudo useradd -M -G video greeter
sudo chmod -R go+r /etc/greetd/

# tuigreet - Graphical console greeter for greetd.
git clone https://github.com/apognu/tuigreet.git && cd tuigreet/
cargo build --release
sudo mv target/release/tuigreet /usr/local/bin/tuigreet
sudo mkdir /var/cache/tuigreet
sudo chown greeter:greeter /var/cache/tuigreet
sudo chmod 0755 /var/cache/tuigreet

# tdf - A terminal-based PDF viewer.
sudo nala install -y libpoppler-dev libpoppler-glib-dev
git clone --recursive https://github.com/itsjunetime/tdf.git && cd tdf/
cargo build --release && cp target/release/tdf ~/.local/bin/

# frp
wget "$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest | grep browser_download_url | cut -d '"' -f 4|grep frp_.*_linux_amd64.tar.gz)" \
  && tar -xzvf frp_*_linux_amd64.tar.gz && cd frp_*_linux_amd64/ \
  && mv frpc frps ~/.local/bin/

# pnpm
curl -fsSL https://get.pnpm.io/install.sh | sh -

# wechat
wget "https://dldir1v6.qq.com/weixin/Universal/Linux/WeChatLinux_x86_64.deb" -P /tmp/
sudo dpkg -i /tmp/WeChatLinux_x86_64.deb

# Vimix cursor
git clone https://github.com/vinceliuice/Vimix-cursors.git && cd Vimix-cursors/
mkdir -p ~/.local/share/icons/
cp -r ./dist ~/.local/share/icons/Vimix
cp -r ./dist-white ~/.local/share/icons/Vimix-white

# swappy
git clone https://github.com/jtheoof/swappy.git && cd swappy/
meson setup build && sudo ninja -C build/ install


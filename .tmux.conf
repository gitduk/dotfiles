###############
### options ###
###############

set -g prefix C-d           # GNU-Screen compatible prefix
set -g history-limit 8000   # increase scrollback lines
set -g base-index 1         # start windows numbering at 1
set -g pane-base-index 1    # make pane numbering consistent with windows
set -g status-interval 2
set -g status-keys vi
set -g mode-keys vi
set -g history-file /tmp/tmux.history

# shell
set -g default-shell /usr/bin/zsh
set -g default-command /usr/bin/zsh
set -g display-panes-time 3000         # slightly longer pane indicators display time
set -g display-time 1000               # slightly longer status messages display time
set -s escape-time 300                 # faster command sequences
set -g xterm-keys off
set -g set-titles on                   # set terminal title
set -g automatic-rename on             # rename window to reflect current program
set -g renumber-windows on             # renumber windows when a window is closed
set -g exit-unattached off
set -g mouse on
set -s focus-events on
set -sg repeat-time 300                # increase repeat timeout

# term
set -g default-terminal "${TERM}"
set-option -ga terminal-overrides ",${TERM}:Tc"

# activity
set -g monitor-activity on
set -g visual-activity off

# size windows based on clients looking at that window
setw -g aggressive-resize on

# enable Yazi's image preview
set -g allow-passthrough on
set -ga update-environment $TERM
set -ga update-environment $TERM_PROGRAM

# custom envs
tmux_scripts="$HOME/.zsh.d/scripts/tmux"

################
### bindings ###
################

# reload configuration
bind -r r source-file "$HOME/.tmux.conf" \; display-message "$HOME/.tmux.conf reloaded"

bind -r n command-prompt -p "Rename window:" "rename-window -- '%%'"
bind -r N command-prompt -p "Rename session:" "rename-session -- '%%'"

bind -r c new-window -c "#{pane_current_path}"
bind -r - split-window -v -c "#{pane_current_path}"
bind -r \\ split-window -h -c "#{pane_current_path}"
bind -r _ run-shell "$tmux_scripts/new-pane-ssh.sh -v"
bind -r \| run-shell "$tmux_scripts/new-pane-ssh.sh -h"

bind -r Tab last-window  # move to last active window
bind -r h select-pane -L # move left
bind -r j select-pane -D # move down
bind -r k select-pane -U # move up
bind -r l select-pane -R # move right
bind -r H command-prompt -p "Push left by:" "resize-pane -L '%%'"
bind -r J command-prompt -p "Push right by:" "resize-pane -D '%%'"
bind -r K command-prompt -p "Push up by:" "resize-pane -U '%%'"
bind -r L command-prompt -p "Push down by:" "resize-pane -R '%%'"

# pane movement
unbind t
bind -r T command-prompt -p "Join pane from:"  "join-pane -bh -s '%%'"
bind -r t command-prompt -p "Send pane to:"  "join-pane -dh -t '%%'"
bind -r p command-prompt -p "Swap pane with:" "swap-pane -d -t '%%'"

# window movement
bind -r f command-prompt -p "Find window:" "find-window '%%'"
bind -r C-s command-prompt -p "Swap window with:" "swap-window -d -t '%%'"

unbind >
bind -r > command-prompt -p "Move window to:" "move-window -t '%%'"

# break pane
unbind b
bind -r b break-pane
bind -r [ rotate-window

# show messages
bind -r m show-messages

# show keys
bind -r ? list-keys
bind -r y setw synchronize-panes

# copy mode
bind -r Enter copy-mode     # enter copy mode
bind -r v paste-buffer      # paste content
bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "wl-copy"
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X rectangle-toggle

# bind -r P choose-buffer # choose which buffer to paste from
# bind -r p pasteb

# enable and disable keyboard input for panes
bind -r < select-pane -d \; display-message "Input disabled"
bind -r > select-pane -e \; display-message "Input enabled"

# toggle passthrough of prefix
# bind -r b if-shell "[ \"$(tmux show-options -g prefix)\" = \"prefix C-d\" ]" '\
#     set -g prefix C-b; display-message "Use C-b as prefix"; refresh-client -S; \
#     ' '\
#     set -g prefix C-d; display-message "Use C-d as prefix"; refresh-client -S; \
#     '

# switch session
bind -r C-n switch-client -n
bind -r C-c command-prompt -p "Create session:" "new -A -s '%%'"
bind -r C-t command-prompt -p "Switch session:" "switch-client -t %%"

# edit configuration
bind -r E new-window sh -c '$EDITOR $HOME/.tmux.conf'

# switch window
bind -r C-h previous-window
bind -r C-l next-window

# kill pane
bind -r o kill-pane -a
bind -n C-x kill-pane

# kill window
# bind -r C-k run-shell $tmux_scripts/kill-rightw.sh

# status bar
bind -r C-b set-option status

# detach session
bind -r C-d detach

##############
### themes ###
##############
# One Dark
tmux_color_bg="#282c34"
tmux_color_fg="#aab2bf"
tmux_color_black="#282c34"
tmux_color_gray="#5c6370"
tmux_color_red="#e06c75"
tmux_color_yellow="#e5c07b"
tmux_color_green="#98c379"
tmux_color_blue="#61afef"
tmux_color_cyan="#3e4452"
tmux_color_magenta="#c6aae8"
tmux_font_style="bold"

# custom envs
tmux_reset="#[bg=default fg=${tmux_color_black} ${tmux_font_style}]"
tmux_separator="#[bg=default fg=${tmux_color_black} ${tmux_font_style}]/"
tmux_time="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]%H:%M"
tmux_host="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#H"
tmux_session="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#($tmux_scripts/snumber.sh)#S"
tmux_window="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#W"
tmux_cpu="#($tmux_scripts/cpu.sh ${tmux_font_style})"
tmux_memory="#($tmux_scripts/memory.sh ${tmux_font_style})"
tmux_disk="#($tmux_scripts/disk.sh ${tmux_font_style})"
tmux_temp="#($tmux_scripts/temp.sh ${tmux_font_style})"
tmux_uptime="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#($tmux_scripts/uptime.sh)"
tmux_ip="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#(cat /tmp/ip_address 2>/dev/null || hostname -I | awk '{print $1}')"
tmux_hosts="#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#(cat /tmp/live_hosts 2>/dev/null|wc -l)"

# pane icon
tmux_icon_normal="î©±"
tmux_icon_prefix="#[fg=${tmux_color_green} bg=default ${tmux_font_style}]${tmux_icon_normal}"
tmux_icon_zoomed="#[fg=${tmux_color_yellow} bg=default ${tmux_font_style}]${tmux_icon_normal}"
tmux_icon_sync="#[fg=${tmux_color_yellow} bg=default ${tmux_font_style}]${tmux_icon_normal}"
tmux_icon_zoom_sync="#[fg=${tmux_color_red} bg=default ${tmux_font_style}]${tmux_icon_normal}"

# messages
set -g message-style "bg=default,fg=${tmux_color_blue},align=left,${tmux_font_style}"
set -g message-command-style "bg=default,fg=${tmux_color_fg},align=left,${tmux_font_style}"

# pane border
set -g pane-border-style "fg=${tmux_color_gray}"
set -g pane-active-border-style "fg=${tmux_color_gray}"

# windows
set -g window-status-separator ""
set -g window-status-style "bg=default,fg=${tmux_color_fg},${tmux_font_style}"
set -g window-status-current-style "bg=default,fg=white"
set -g window-status-activity-style "bg=default,fg=${tmux_color_fg},${tmux_font_style}"

# statusline
set -g status on
set -g status-position bottom
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# status format
set -g status-style "bg=default,fg=${tmux_color_fg}"
set -g status-left "${tmux_session}@${tmux_host} ${tmux_separator} "
set -g status-right "${tmux_window}#{?@pane_name,:#{@pane_name},} ${tmux_separator} ${tmux_reset}C:${tmux_cpu} ${tmux_reset}M:${tmux_memory} ${tmux_reset}D:${tmux_disk} ${tmux_reset}T:${tmux_temp} ${tmux_separator} ${tmux_time}"

# window format
set -g window-status-format "#[fg=${tmux_color_gray} bg=default ${tmux_font_style}]#{?window_zoomed_flag,#{?pane_synchronized,${tmux_icon_zoom_sync},${tmux_icon_zoomed}} ,#{?pane_synchronized,${tmux_icon_sync},${tmux_icon_normal}} }"
set -g window-status-current-format "#[fg=${tmux_color_blue} bg=default ${tmux_font_style}]#{?client_prefix,${tmux_icon_prefix} ,#{?window_zoomed_flag,#{?pane_synchronized,${tmux_icon_zoom_sync},${tmux_icon_zoomed}} ,#{?pane_synchronized,${tmux_icon_sync},${tmux_icon_normal}} }}"

# Mode
set -g clock-mode-colour "${tmux_color_blue}"
set -g mode-style "bg=${tmux_color_black},fg=white,${tmux_font_style}"

